{"version":3,"sources":["utils/fill-grid/index.ts","utils/shuffleNumber/index.ts","utils/checknumberposition/index.ts","utils/identifysquares/index.ts","utils/check-grid/index.ts","utils/compare-arrays/index.ts","utils/copy-grid/index.ts","utils/createFullGrid/index.ts","utils/get-random-index/index.ts","global/index.ts","utils/remove-numbers/index.ts","utils/solve-grid/index.ts","reducers/actions.ts","reducers/reducer.ts","reducers/index.ts","core/service-worker/index.ts","core/configure-store/index.ts","styles/global.ts","styles/theme.ts","components/uielements/content/index.ts","components/uielements/title/index.ts","components/uielements/card/index.ts","components/uielements/button/index.ts","components/grid/styles/index.ts","components/grid/block/styles/index.ts","components/grid/block/index.tsx","components/grid/index.tsx","components/new-button/index.tsx","components/numbers/button/index.tsx","components/numbers/styles/index.ts","components/numbers/index.tsx","index.tsx","reducers/types.ts"],"names":["numbers","FillGrid","grid","row","col","i","Math","floor","shuffle","value","checknumber","valueInRow","valueInCol","square","identifySquare","valueInSquare","checkGrid","array","length","j","random","includes","identifyWorkingSquare","x","push","compareArrays","arr1","arr2","Array","isArray","len","copyGrid","gridCopy","r","c","createFullGrid","getRandomIndex","counter","removeNumbers","attempts","backup","global","solveGrid","createGrid","type","types","fillBlock","coords","selectBlock","initialState","reducer","state","action","solvedGrid","challengeGrid","workingGrid","alert","selectedBlock","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","store","createStore","devToolsEnhancer","persistor","persistStore","createGlobalStyle","theme","css","colors","white","background","black","gray","blue","lightblue","transition","Content","styled","div","Title","h1","Card","Button","button","Container","Row","active","Block","colIndex","rowIndex","useSelector","isActive","dispatch","useDispatch","data-cy","onClick","Grid","selectedValue","create","useCallback","fill","n","useMousetrap","useEffect","Children","toArray","map","arrayitem","rowindex","colindex","NewButton","createNewGrid","confirm","NumberButton","Numbers","mergeStyles","selectors","margin","padding","height","ReactDOM","render","Customizer","FluentCustomizations","loading","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","CREATE_GRID","FILL_BLOCK","SELECT_BLOCK"],"mappings":"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","file":"static/js/main.acd37e94.chunk.js","sourcesContent":["import { GRID, NUMBERS } from \"../../typings\";\nimport { shuffle, checknumber, identifySquare, checkGrid } from \"../../utils\";\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n/**\n * A backtracking recursive function\n * @param grid\n */\n\nfunction FillGrid(grid: GRID) {\n  let row = 0;\n  let col = 0;\n\n  for (let i = 0; i < 81; i++) {\n    row = Math.floor(i / 9);\n    col = i % 9;\n\n    if (grid[row][col] === 0) {\n      shuffle(numbers);\n\n      for (let value of numbers) {\n        if (!checknumber.valueInRow({ grid, row, value })) {\n          if (!checknumber.valueInCol({ col, grid, value })) {\n            const square = identifySquare({ col, grid, row });\n            if (!checknumber.valueInSquare({ square, value })) {\n              grid[row][col] = value;\n              if (checkGrid(grid)) {\n                return true;\n              } else if (FillGrid(grid)) {\n                return true;\n              }\n            }\n          }\n        }\n      }\n      break;\n    }\n  }\n\n  grid[row][col] = 0;\n}\n\nexport default FillGrid;\n","function shuffle(array: any[]) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nexport default shuffle;\n","import { GRID, NUMBERS, SQUARE } from \"../../typings\";\n\ninterface IInputRow {\n  grid: GRID;\n  row: number;\n  value: NUMBERS;\n}\ninterface IInputCol {\n  grid: GRID;\n  col: number;\n  value: NUMBERS;\n}\n\ninterface IInPutSquare {\n  square: SQUARE;\n  value: NUMBERS;\n}\n\nfunction valueInRow({ grid, row, value }: IInputRow): boolean {\n  return grid[row].includes(value);\n}\n\nfunction valueInCol({ grid, col, value }: IInputCol): boolean {\n  for (let i = 0; i < 9; i++) {\n    if (value === grid[i][col]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction valueInSquare({ square, value }: IInPutSquare): boolean {\n  return [...square[0], ...square[1], ...square[2]].includes(value);\n}\n\nconst checknumber = {\n  valueInCol,\n  valueInRow,\n  valueInSquare,\n};\nexport default checknumber;\n\n// export { default as valueIsInCol } from \"./valueIsInCol\";\n// export { default as valueIsInRow } from \"./valueIsInRow\";\n","import { GRID, SQUARE } from \"../../typings\";\n\ninterface IInput {\n  grid: GRID;\n  row: number;\n  col: number;\n}\n\n/**\n * A function that identifies and returns the current square of a given sudoku grid at a row and column index.\n * @param input Object with 9X9 Sudoku Grid, row index and column index\n */\nfunction identifyWorkingSquare({ col, grid, row }: IInput): SQUARE {\n  const square = [];\n  if (row < 3) {\n    if (col < 3)\n      for (let x = 0; x < 3; x++)\n        square.push([grid[x][0], grid[x][1], grid[x][2]]);\n    else if (col < 6)\n      for (let x = 0; x < 3; x++)\n        square.push([grid[x][3], grid[x][4], grid[x][5]]);\n    else\n      for (let x = 0; x < 3; x++)\n        square.push([grid[x][6], grid[x][7], grid[x][8]]);\n  } else if (row < 6) {\n    if (col < 3)\n      for (let x = 3; x < 6; x++)\n        square.push([grid[x][0], grid[x][1], grid[x][2]]);\n    else if (col < 6)\n      for (let x = 3; x < 6; x++)\n        square.push([grid[x][3], grid[x][4], grid[x][5]]);\n    else\n      for (let x = 3; x < 6; x++)\n        square.push([grid[x][6], grid[x][7], grid[x][8]]);\n  } else {\n    if (col < 3)\n      for (let x = 6; x < 9; x++)\n        square.push([grid[x][0], grid[x][1], grid[x][2]]);\n    else if (col < 6)\n      for (let x = 6; x < 9; x++)\n        square.push([grid[x][3], grid[x][4], grid[x][5]]);\n    else\n      for (let x = 6; x < 9; x++)\n        square.push([grid[x][6], grid[x][7], grid[x][8]]);\n  }\n\n  return square as SQUARE;\n}\n\nexport default identifyWorkingSquare;\n","import { GRID } from \"../../typings\";\n\n/**\n * A function to check if the grid is full\n * @param grid A 9X9 Sudoku Grid\n */\nfunction checkGrid(grid: GRID): boolean {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      if (grid[i][j] === 0) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default checkGrid;\n","/**\n * Compares two arrays (of any dimensions) and returns true if they are equal, other returns false\n * @param arr1 first array to be compared\n * @param arr2 second array to be compared\n */\nfunction compareArrays(arr1: any[], arr2: any[]): boolean {\n  if (!Array.isArray(arr1) && !Array.isArray(arr2)) return arr1 === arr2\n\n  if (arr1.length !== arr2.length) return false\n\n  for (let i = 0, len = arr1.length; i < len; i++)\n    if (!compareArrays(arr1[i], arr2[i])) return false\n\n  return true\n}\n\nexport default compareArrays\n","import { GRID, INDEX } from \"../../typings\";\n\nfunction copyGrid(grid: GRID): GRID {\n  const gridCopy: GRID = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ];\n\n  for (let r: INDEX = 0; r < 9; r++)\n    for (let c: INDEX = 0; c < 9; c++) gridCopy[r][c] = grid[r][c];\n\n  return gridCopy;\n}\n\nexport default copyGrid;\n","import { GRID } from \"../../typings\";\nimport { FillGrid } from \"../index\";\n\nfunction createFullGrid(): GRID {\n  const grid: GRID = [\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0],\n  ];\n\n  FillGrid(grid);\n  return grid;\n}\nexport default createFullGrid;\n","/**\n * Return a random sudokue grid index in the 0 = 8 range\n */\nfunction getRandomIndex() {\n  return Math.floor(Math.random() * Math.floor(9))\n}\n\nexport default getRandomIndex\n","export default {\n  counter: 0,\n}\n","import global from \"../../global\";\nimport { GRID } from \"../../typings\";\nimport { copyGrid, getRandomIndex, solveGrid } from \"../../utils\";\n\n/**\n * Removes numbers from a full grid to create a Sudoku Puzzle.\n * @param grid 9X9 Sudoku Grid\n * @param attempts number of attempts to solve (higher means more difficult) - default 5\n */\nfunction removeNumbers(grid: GRID, attempts = 5): GRID {\n  while (attempts > 0) {\n    let row = getRandomIndex();\n    let col = getRandomIndex();\n\n    while (grid[row][col] === 0) {\n      row = getRandomIndex();\n      col = getRandomIndex();\n    }\n\n    const backup = grid[row][col];\n    grid[row][col] = 0;\n\n    const gridCopy = copyGrid(grid);\n\n    global.counter = 0;\n    solveGrid(gridCopy);\n\n    if (global.counter !== 1) {\n      grid[row][col] = backup;\n      attempts--;\n    }\n  }\n\n  return grid;\n}\n\nexport default removeNumbers;\n","import global from \"../../global\";\nimport { GRID, NUMBERS } from \"../../typings\";\nimport { checkGrid, identifySquare, checknumber } from \"../../utils\";\n\nconst numbers: NUMBERS[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n/**\n * A backtracking/recursive function to check all possible combinations of numbers until a solution is found\n * @param grid A 9X9 array consisting of values from 0-9)\n */\nfunction solveGrid(grid: GRID) {\n  let row = 0;\n  let col = 0;\n\n  for (let i = 0; i < 81; i++) {\n    row = Math.floor(i / 9);\n    col = i % 9;\n\n    if (grid[row][col] === 0) {\n      for (let value of numbers)\n        if (!checknumber.valueInRow({ grid, row, value }))\n          if (!checknumber.valueInCol({ col, grid, value })) {\n            const square = identifySquare({ col, grid, row });\n            if (!checknumber.valueInSquare({ square, value })) {\n              grid[row][col] = value;\n              if (checkGrid(grid)) {\n                global.counter++;\n                break;\n              } else if (solveGrid(grid)) return true;\n            }\n          }\n      break;\n    }\n  }\n\n  grid[row][col] = 0;\n}\nexport default solveGrid;\n","import { Action, AnyAction } from \"redux\";\n\nimport { BLOCK_COORDS, NUMBERS } from \"../typings\";\n\nimport * as types from \"./types\";\n\nexport const createGrid = (): Action => ({ type: types.CREATE_GRID });\n\nexport const fillBlock = (value: NUMBERS, coords: BLOCK_COORDS): AnyAction => ({\n  coords,\n  type: types.FILL_BLOCK,\n  value,\n});\n\nexport const selectBlock = (coords: BLOCK_COORDS): AnyAction => ({\n  coords,\n  type: types.SELECT_BLOCK,\n});\n","import { AnyAction } from \"redux\";\nimport { IReducer } from \"./interfaces\";\nimport * as types from \"./types\";\n\nimport { GRID } from \"../typings\";\nimport {\n  compareArrays,\n  copyGrid,\n  createFullGrid,\n  removeNumbers,\n} from \"../utils\";\n\nconst initialState: IReducer = {};\n\nfunction reducer(state = initialState, action: AnyAction): IReducer {\n  switch (action.type) {\n    case types.CREATE_GRID: {\n      const solvedGrid = createFullGrid();\n      const gridCopy = copyGrid(solvedGrid);\n      const challengeGrid = removeNumbers(gridCopy);\n      const workingGrid = copyGrid(challengeGrid);\n      return {\n        ...state,\n        challengeGrid,\n        solvedGrid,\n        workingGrid,\n      };\n    }\n\n    case types.FILL_BLOCK: {\n      if (state.workingGrid && state.solvedGrid) {\n        if (\n          state.solvedGrid[action.coords[0]][action.coords[1]] !== action.value\n        ) {\n          alert(\"Incorrect Option!\");\n          return state;\n        }\n        state.workingGrid[action.coords[0]][action.coords[1]] = action.value;\n        if (compareArrays(state.workingGrid, state.solvedGrid))\n          alert(\"Completed!\");\n        return { ...state, workingGrid: [...state.workingGrid] as GRID };\n      }\n      return state;\n    }\n\n    case types.SELECT_BLOCK:\n      return { ...state, selectedBlock: action.coords };\n\n    default:\n      return state;\n  }\n}\nexport default reducer;\n","import { default as reducer } from \"./reducer\";\n\nexport type IReducer = ReturnType<typeof reducer>;\n\nexport default reducer;\n\nexport * from \"./actions\";\nexport * from \"./types\";\nexport * from \"./interfaces\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from \"redux\";\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport reducer from \"../../reducers\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nfunction configureStore() {\n  const store = createStore(persistedReducer, devToolsEnhancer({}));\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n}\n\nexport default configureStore;\n","import { createGlobalStyle, css } from \"styled-components\";\n\nexport default createGlobalStyle`\n    ${({ theme }) => css`\n        html{\n            height: 100%;\n            width:100%;\n\n            body {\n                display:flex;\n                flex-direction:column;\n                height: 100%;\n                margin:0;\n\n             #root {\n                background: radial-gradient(#000000cc,#000000);\n                color:${theme.colors.white};\n                display:flex;\n                font-family:-sans-serif;\n                height:100%;\n                justify-content: center;\n                padding: 15px;\n\n        }\n    }\n`}\n`;\n","export default {\n  colors: {\n    background: \"radial-gradient(#000000cc,#000000)\",\n    black: \"#000000\",\n    gray: \"#282c34\",\n    blue: \"#a0e9fd\",\n    lightblue: \"#caf3fe\",\n    white: \"#ffffff\",\n  },\n  transition: \"0.3s\",\n};\n","import styled from \"styled-components\";\n\nexport const Content = styled.div`\n  background: transparent;\n  max-width: 500px;\n  max-height: 900px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  opacity: 0.8;\n`;\n","import styled, { css } from \"styled-components\";\nimport { theme } from \"../../../styles\";\n\nexport const Title = styled.h1`\n  ${({ theme }) => css`\n    color: ${theme.colors.white};\n    margin-top: 0;\n    text-align: center;\n  `}\n`;\n","import styled, { css } from \"styled-components\";\nimport { theme } from \"../../../styles\";\n\nexport const Card = styled.div`\n  ${() => css`\n    background-color: ${theme.colors.gray};\n    border-radius: 15px;\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    max-height: fit-content;\n    padding: 15px;\n  `}\n`;\n","import styled, { css } from 'styled-components'\n\nexport const Button = styled.button`\n  ${({ theme }) => css`\n    align-items: center;\n    background-color: ${theme.colors.black};\n    border: 2px solid ${theme.colors.black};\n    border-radius: 4px;\n    color: ${theme.colors.white};\n    cursor: pointer;\n    display: flex;\n    flex: 1;\n    font-size: 16px;\n    font-weight: bold;\n    height: 40px;\n    justify-content: center;\n    margin: 4px 2px;\n    min-height: 40px;\n    opacity: 0.9;\n    padding: 0;\n    transition: ${theme.transition};\n\n    &:focus {\n      border-color: ${theme.colors.blue};\n      outline: none;\n    }\n\n    &:hover {\n      opacity: 0.6;\n    }\n  `}\n`\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 10px 0;\n`;\n\nexport const Row = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    flex-flow: row;\n\n    &:nth-child(1) {\n      div {\n        border-top: solid 4px ${theme.colors.black};\n      }\n    }\n\n    &:nth-child(3),\n    &:nth-child(6) {\n      div {\n        border-bottom: solid 3px ${theme.colors.black};\n      }\n    }\n    &:nth-child(9) {\n      div {\n        border-bottom: solid 4px ${theme.colors.black};\n      }\n    }\n    div {\n      &:nth-child(1) {\n        border-left: solid 4px ${theme.colors.black};\n      }\n      &:nth-child(3),\n      &:nth-child(6) {\n        border-right: solid 3px ${theme.colors.black};\n      }\n      &:nth-child(9) {\n        border-right: solid 4px ${theme.colors.black};\n      }\n    }\n  `}\n`;\n","import styled, { css } from \"styled-components\";\n\ninterface IProps {\n  active?: boolean;\n}\n\nexport const Container = styled.div<IProps>`\n  ${({ active, theme }) => css`\n    align-items: center;\n    background-color: ${active ? theme.colors.blue : theme.colors.white};\n    color: ${theme.colors.black};\n    border: solid 1px ${theme.colors.black};\n    cursor: pointer;\n    display: flex;\n    flex-grow: 1;\n    flex-shrink: 0;\n    flex-basis: 0;\n    font-size: 20px;\n    font-weight: bold;\n    height: auto;\n    justify-content: center;\n    transition: ${theme.transition};\n    user-select: none;\n\n    &:before {\n      padding-top: 100%;\n      content: \"\";\n      float: left;\n    }\n\n    &:hover {\n      background-color: ${theme.colors.lightblue};\n    }\n  `}\n`;\n","import React, { FC } from \"react\";\nimport { Container } from \"./styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { AnyAction, Dispatch } from \"redux\";\nimport { N, INDEX } from \"../../../typings\";\nimport { IReducer, selectBlock } from \"../../../reducers\";\n\ninterface IProps {\n  colIndex: INDEX;\n  rowIndex: INDEX;\n}\n\ninterface IState {\n  isActive: boolean;\n  value: N;\n}\n\nconst Block: FC<IProps> = ({ colIndex, rowIndex }) => {\n  const state = useSelector<IReducer, IState>(\n    ({ workingGrid, selectedBlock }) => ({\n      isActive: selectedBlock\n        ? selectedBlock[0] === rowIndex && selectedBlock[1] === colIndex\n        : false,\n      value: workingGrid ? workingGrid[rowIndex][colIndex] : 0,\n    })\n  );\n\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\n\n  function handleClick() {\n    if (!state.isActive) dispatch(selectBlock([rowIndex, colIndex]));\n  }\n  return (\n    <Container\n      data-cy={\"block-$(rowIndex)-$(colIndex)\"}\n      active={state.isActive}\n      onClick={handleClick}\n    >\n      {state.value === 0 ? \"\" : state.value}\n    </Container>\n  );\n};\n\nexport default Block;\n","import React, { FC, Children, useCallback, useEffect } from \"react\";\nimport useMousetrap from \"react-hook-mousetrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AnyAction, Dispatch } from \"redux\";\n\nimport { Container, Row } from \"./styles\";\nimport Block from \"./block\";\nimport { createFullGrid } from \"../../utils\";\n\nimport { createGrid, IReducer, selectBlock, fillBlock } from \"../../reducers\";\nimport { BLOCK_COORDS, GRID, INDEX, N, NUMBERS } from \"../../typings\";\n\ninterface IState {\n  selectedBlock?: BLOCK_COORDS;\n  selectedValue: N;\n  solvedGrid?: GRID;\n}\n\nconst Grid: FC = () => {\n  const state = useSelector<IReducer, IState>(\n    ({ selectedBlock, solvedGrid, workingGrid }) => ({\n      selectedBlock,\n      selectedValue:\n        workingGrid && selectedBlock\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\n          : 0,\n      solvedGrid,\n    })\n  );\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\n\n  const create = useCallback(() => dispatch(createGrid()), [dispatch]);\n\n  const fill = useCallback(\n    (n: NUMBERS) => {\n      if (state.selectedBlock && state.selectedValue === 0)\n        dispatch(fillBlock(n, state.selectedBlock));\n    },\n    [dispatch, state.selectedBlock, state.selectedValue]\n  );\n\n  function moveDown() {\n    if (state.selectedBlock && state.selectedBlock[0] < 8)\n      dispatch(\n        selectBlock([\n          (state.selectedBlock[0] + 1) as INDEX,\n          state.selectedBlock[1],\n        ])\n      );\n  }\n\n  function moveLeft() {\n    if (state.selectedBlock && state.selectedBlock[1] > 0)\n      dispatch(\n        selectBlock([\n          state.selectedBlock[0],\n          (state.selectedBlock[1] - 1) as INDEX,\n        ])\n      );\n  }\n\n  function moveRight() {\n    if (state.selectedBlock && state.selectedBlock[1] < 8)\n      dispatch(\n        selectBlock([\n          state.selectedBlock[0],\n          (state.selectedBlock[1] + 1) as INDEX,\n        ])\n      );\n  }\n\n  function moveUp() {\n    if (state.selectedBlock && state.selectedBlock[0] > 0)\n      dispatch(\n        selectBlock([\n          (state.selectedBlock[0] - 1) as INDEX,\n          state.selectedBlock[1],\n        ])\n      );\n  }\n\n  useMousetrap(\"1\", () => fill(1));\n  useMousetrap(\"2\", () => fill(2));\n  useMousetrap(\"3\", () => fill(3));\n  useMousetrap(\"4\", () => fill(4));\n  useMousetrap(\"5\", () => fill(5));\n  useMousetrap(\"6\", () => fill(6));\n  useMousetrap(\"7\", () => fill(7));\n  useMousetrap(\"8\", () => fill(8));\n  useMousetrap(\"9\", () => fill(9));\n  useMousetrap(\"down\", moveDown);\n  useMousetrap(\"left\", moveLeft);\n  useMousetrap(\"right\", moveRight);\n  useMousetrap(\"up\", moveUp);\n\n  useEffect(() => {\n    if (!state.solvedGrid) create();\n  }, [create, state.solvedGrid]);\n  const grid = createFullGrid();\n  return (\n    <Container data-cy=\"Grid-container\">\n      {Children.toArray(\n        [...Array(9)].map((arrayitem, rowindex) => (\n          <Row data-cy=\"grid-row-container\">\n            {Children.toArray(\n              [...Array(9)].map((arrayitem, colindex) => (\n                <Block\n                  colIndex={colindex as INDEX}\n                  rowIndex={rowindex as INDEX}\n                ></Block>\n              ))\n            )}\n          </Row>\n        ))\n      )}\n    </Container>\n  );\n};\nexport default Grid;\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Action, Dispatch } from \"redux\";\n\nimport { Button } from \"../uielements\";\nimport { createGrid } from \"../../reducers\";\n\nconst NewButton: FC = () => {\n  const dispatch = useDispatch<Dispatch<Action>>();\n\n  const createNewGrid = useCallback(() => {\n    if (window.confirm(\"Are you sure you want to start a new game?\"))\n      dispatch(createGrid());\n  }, [dispatch]);\n\n  return <Button onClick={createNewGrid}>New Game</Button>;\n};\n\nexport default NewButton;\n","import React, { FC, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AnyAction, Dispatch } from \"redux\";\n\nimport { Button } from \"../../uielements\";\nimport { fillBlock, IReducer } from \"../../../reducers\";\nimport { BLOCK_COORDS, N, NUMBERS } from \"../../../typings\";\n\ninterface IProps {\n  value: NUMBERS;\n}\n\ninterface IState {\n  selectedBlock?: BLOCK_COORDS;\n  selectedValue: N;\n}\n\nconst NumberButton: FC<IProps> = ({ value }) => {\n  const state = useSelector<IReducer, IState>(\n    ({ selectedBlock, workingGrid }) => ({\n      selectedBlock,\n      selectedValue:\n        workingGrid && selectedBlock\n          ? workingGrid[selectedBlock[0]][selectedBlock[1]]\n          : 0,\n    })\n  );\n  const dispatch = useDispatch<Dispatch<AnyAction>>();\n\n  const fill = useCallback(() => {\n    if (state.selectedBlock && state.selectedValue === 0)\n      dispatch(fillBlock(value, state.selectedBlock));\n  }, [dispatch, state.selectedBlock, state.selectedValue, value]);\n\n  return <Button onClick={fill}>{value}</Button>;\n};\n\nexport default NumberButton;\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-flow: row;\n`\n","import React, { FC } from \"react\";\n\nimport { NUMBERS } from \"../../typings\";\n\nimport Button from \"./button\";\nimport { Container } from \"./styles\";\n\nconst Numbers: FC = () => (\n  <Container>\n    {([1, 2, 3, 4, 5, 6, 7, 8, 9] as NUMBERS[]).map((value) => (\n      <Button key={value} value={value} />\n    ))}\n  </Container>\n);\n\nexport default Numbers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { FluentCustomizations } from \"@uifabric/fluent-theme\";\nimport { Customizer, mergeStyles } from \"office-ui-fabric-react\";\nimport * as serviceWorker from \"./core/index\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles, theme } from \"./styles\";\n\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { Content, Title, Card, Grid, Numbers, NewButton } from \"./components\";\n\nconst { persistor, store } = serviceWorker.configureStore();\n\n// Inject some global styles\nmergeStyles({\n  selectors: {\n    \":global(body), :global(html), :global(#root)\": {\n      margin: 0,\n      padding: 0,\n      height: \"100vh\",\n    },\n  },\n});\nReactDOM.render(\n  <Customizer {...FluentCustomizations}>\n    <ThemeProvider theme={theme}>\n      <GlobalStyles></GlobalStyles>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <Content>\n            <Title>SUDOKU</Title>\n            <Card>\n              <NewButton></NewButton>\n              <Grid></Grid>\n              <Numbers></Numbers>\n            </Card>\n          </Content>\n        </PersistGate>\n      </Provider>\n    </ThemeProvider>\n  </Customizer>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const CREATE_GRID = \"CREATE_GRID\";\nexport const FILL_BLOCK = \"FILL_BLOCK\";\nexport const SELECT_BLOCK = \"SELECT_BLOCK\";\n"],"sourceRoot":""}